/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbcgui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author amir
 */
public class UpdateDeleteOrder extends javax.swing.JFrame {

    String DBURL = "jdbc:oracle:thin:@coeoracle.aus.edu:1521:orcl";
    String DBUSER = "b00074559";
    String DBPASS = "b00074559";

    Connection con;
    Statement statement;
    PreparedStatement prepStatement;
    ResultSet rs,rs2,rs3,rs4;
    ResultSet rs_store;
    /**
     * Creates new form UpdateDeleteOrder
     */
    public UpdateDeleteOrder() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        
        try 
        {
            // Load Oracle JDBC Driver
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Connect to Oracle Database
            con = DriverManager.getConnection(DBURL, DBUSER, DBPASS);
            // make the result set scrolable forward/backward updatable
            statement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

            //rs = statement.executeQuery("SELECT * FROM contains");
            getNewData();
            // populate mgr combo box
            
        } 
        catch (ClassNotFoundException | SQLException e) 
        {
            System.out.println(e);
        }
    }

    
    private void getNewData() {

        try 
        {
 
            rs = statement.executeQuery("SELECT ssn FROM customers order by ssn");
            jComboBox1.removeAllItems();
            while (rs.next()) 
            {
                jComboBox1.addItem(rs.getString("ssn"));
            }
            
            rs2 = statement.executeQuery("SELECT store_num FROM stores ORDER BY store_num ASC");

 
            jComboBox2.removeAllItems();
            while (rs2.next()) {
                jComboBox2.addItem(rs2.getString("store_num"));
            }
            
            rs3 = statement.executeQuery("SELECT watch_id FROM watch_stock order by watch_id");
            
            jComboBox3.removeAllItems();
            while (rs3.next()) 
            {
                jComboBox3.addItem(rs3.getString("watch_id"));
            }
            
//            rs4 = statement.executeQuery("SELECT order_id FROM buys_from2 order by order_id desc");
//            rs4.beforeFirst();
//            rs4.first();
//            jLabel5.setText(rs4.getString("order_id"));
            
            rs = statement.executeQuery("SELECT cust_ssn, s_num,wat_id,order_id FROM buys_from2 order by order_id");
            rs.beforeFirst();
            rs.first();
            populateFields();
            
            
        } 
        catch (SQLException e) 
        {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - - .");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void populateFields() {
        try 
        {
            jLabel5.setText(rs.getString("order_id"));
            jComboBox1.setSelectedItem(rs.getString("cust_ssn"));
            jComboBox2.setSelectedItem(rs.getString("s_num"));
            jComboBox3.setSelectedItem(rs.getString("wat_id"));
            
            EnableDisableButtons();
            
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void EnableDisableButtons() {
        try {
            if (rs.isFirst()) {
                jButton1.setEnabled(false);
            } else {
                jButton1.setEnabled(true);
            }
            if (rs.isLast()) {
                jButton4.setEnabled(false);
            } else {
                jButton4.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelUpd = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelUpd.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelUpd.setText("Update/Delete Order");

        jLabel1.setText("Order ID");

        jLabel2.setText("SSN");

        jLabel3.setText("Store Number");

        jLabel4.setText("Watch ID");

        jLabel5.setText("jLabel5");

        jButton1.setText("<<Previous");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Next>>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText(".");

        jLabel7.setText(".");

        jLabel8.setText(".");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(69, 69, 69))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelUpd)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUpd)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MovePrevious();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
           // confirmation
            int value = JOptionPane.showConfirmDialog(this, "Do you confirm to update Customers?");
                if (value == 0) 
                {
                    if (isValidData()) 
                    {
                        prepStatement = con.prepareStatement("UPDATE buys_from2 SET  cust_ssn = ?, s_num = ?, wat_id = ? WHERE order_id = ?");
                        
                       
                        prepStatement.setInt(1, Integer.parseInt(jComboBox1.getSelectedItem().toString()));
                        prepStatement.setInt(2, Integer.parseInt(jComboBox2.getSelectedItem().toString()));
                        prepStatement.setInt(3, Integer.parseInt(jComboBox3.getSelectedItem().toString()));
                        prepStatement.setInt(4, Integer.parseInt(jLabel5.getText()));
                        
                        int result = prepStatement.executeUpdate();
                       
                            if (result > 0) 
                            {
                                javax.swing.JLabel label = new javax.swing.JLabel("Order " + jLabel5.getText() + " updated successfully.");
                                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                                JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                                getNewData();
                            } 
                            else 
                            {
                                // Error 1
                                JOptionPane.showMessageDialog(null, "Can't update SSN");
                            }
                        prepStatement.close();
                    } 
                    else 
                    {
                        javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                        label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                        JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                    }

                } 
                else 
                {
                    //Error 2
                    JOptionPane.showMessageDialog(null, "Error 2" );
                }
            } 
            catch (SQLException e) 
            {
                JOptionPane.showMessageDialog(null, "Error updating Customer." + e.getMessage());
            }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // confirmation
        int value = JOptionPane.showConfirmDialog(this, "Do you confirm to delete Customer?");
        if (value == 0) 
        {
                    try {

                            
                            
                            //old lab way
                            prepStatement = con.prepareStatement("DELETE buys_from2 WHERE order_id = ?");
                            prepStatement.setInt(1, Integer.parseInt(jLabel5.getText()));
                            int result = prepStatement.executeUpdate();
                        
                            //new lab way
                            //String prepSQL = "DELETE customers WHERE ssn = " + jTextField1.getText();
                            //int result = dbCon.executePrepared(prepSQL);
                            if (result > 0) 
                            {
                                javax.swing.JLabel label = new javax.swing.JLabel("Order " + jLabel5.getText().trim() + " deleted successfully.");
                                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                                JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                                getNewData();
                            }
                         } 
                            catch (SQLException e) 
                            {
                                JOptionPane.showMessageDialog(null, "Error deleting customer.");
                            }
            } 
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void MoveNext() {
        try {
            // TODO add your handling code here:

            if (!rs.isLast()) {

                rs.next();
                populateFields();

            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    private void MovePrevious() {
        try 
        {
            // TODO add your handling code here:

            if (!rs.isFirst()) 
            {
                rs.previous();
                populateFields();

            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    boolean isValidData() {

        
        
        clearErrorLabels();
        boolean result = true;
        
//        if (jTextField2.getText().trim().isEmpty() || !isInteger(jTextField2.getText())) {
//            if (jTextField2.getText().trim().isEmpty()) {
//                jLabel6.setText("Invalid. Cannot be empty.");
//            } else if (!isInteger(jTextField2.getText())) {
//                jLabel6.setText("Invalid. Must be integer.");
//            } else if ((jTextField2.getText().trim().length() == 10)){
//            jLabel6.setText("Invalid. Must be 9 values.");
//            }
//
//            jLabel6.setVisible(true);
//            result = false;
//        }
//
//        if (jTextField3.getText().trim().isEmpty() ) {
//            if (jTextField3.getText().trim().isEmpty()) {
//                jLabel7.setText("Invalid. Cannot be empty.");
//            } 
//
//            jLabel7.setVisible(true);
//            result = false;
//        }
        

        return result;
    }
    
    void clearErrorLabels() {
        
        jLabel6.setText("");
        jLabel6.setVisible(false);
        jLabel7.setText("");
        jLabel7.setVisible(false);
        jLabel8.setText("");
        jLabel8.setVisible(false);
       

    }
    
    
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDeleteOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelUpd;
    // End of variables declaration//GEN-END:variables
}
