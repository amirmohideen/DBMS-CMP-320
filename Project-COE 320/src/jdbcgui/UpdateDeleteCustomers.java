/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbcgui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author amir
 */
public class UpdateDeleteCustomers extends javax.swing.JFrame {

    myDBCon dbCon;
    
    String DBURL = "jdbc:oracle:thin:@coeoracle.aus.edu:1521:orcl";
    String DBUSER = "b00074559";
    String DBPASS = "b00074559";

    Connection con;
    Statement statement;
    //Statement statement2;
    PreparedStatement prepStatement;
    ResultSet rs;
    //ResultSet rsdeptno;
    
    /**
     * Creates new form UpdateDeleteCustomers
     */
    public UpdateDeleteCustomers() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        try 
        {
            // Load Oracle JDBC Driver
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Connect to Oracle Database
            con = DriverManager.getConnection(DBURL, DBUSER, DBPASS);
            // make the result set scrolable forward/backward updatable
            statement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            //statement2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            getNewData();
        } 
        catch (ClassNotFoundException | SQLException e) 
        {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Connection error.");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void getNewData() {

        try 
        {
            String str;

            // populate mgr field
            rs = statement.executeQuery("SELECT ssn, fname, lname, mobile, email, gender FROM customers ORDER BY ssn ASC ");

            // populate rest of fields
            rs.beforeFirst();
            rs.first();
            populateFields();
        } 
        catch (SQLException e) 
        {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Display selected empno.");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    
    private void populateFields() {
        try 
        {
            jTextField1.setText(rs.getString("ssn"));
            jTextField2.setText(rs.getString("fname"));
            jTextField3.setText(rs.getString("lname"));
            //cmbMgr.setSelectedItem(rs.getString("mgr"));
            jTextField4.setText(rs.getString("mobile"));
            jTextField5.setText(rs.getString("email"));
            jTextField6.setText(rs.getString("gender"));
            
//            txtSalary.setText(rs.getString("sal"));
//            txtComm.setText(rs.getString("comm"));
//            cmbDeptno.setSelectedItem(rs.getString("deptno"));

            EnableDisableButtons();
            
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void EnableDisableButtons() {
        try {
            if (rs.isFirst()) {
                jButton1.setEnabled(false);
            } else {
                jButton1.setEnabled(true);
            }
            if (rs.isLast()) {
                jButton4.setEnabled(false);
            } else {
                jButton4.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Update/Delete Customers");

        jLabel2.setText("SSN");

        jLabel3.setText("First Name");

        jLabel4.setText("Last Name");

        jLabel5.setText("Mobile");

        jLabel6.setText("Email");

        jLabel7.setText("Gender");

        jButton1.setText("<<Previous");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Next>>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText(".");

        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText(".");

        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText(".");

        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText(".");

        jLabel13.setForeground(new java.awt.Color(255, 51, 51));
        jLabel13.setText(".");

        jLabel14.setForeground(new java.awt.Color(255, 51, 51));
        jLabel14.setText(".");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField4)
                                    .addComponent(jTextField5)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel14))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel10)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         MovePrevious();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void MovePrevious() {
        try 
        {
            // TODO add your handling code here:

            if (!rs.isFirst()) 
            {
                rs.previous();
                populateFields();

            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        MoveNext();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void MoveNext() {
        try {
            // TODO add your handling code here:

            if (!rs.isLast()) {

                rs.next();
                populateFields();

            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
            
        try {
           // confirmation
            int value = JOptionPane.showConfirmDialog(this, "Do you confirm to update Customers?");
                if (value == 0) 
                {
                    if (isValidData()) 
                    {
                        prepStatement = con.prepareStatement("UPDATE customers SET  fname = ?, lname = ?, mobile = ?, email = ?, gender = ? WHERE ssn = ?");
                        
                        prepStatement.setString(1, jTextField2.getText());
                        prepStatement.setString(2, jTextField3.getText());
                        prepStatement.setString(3, jTextField4.getText());
                        prepStatement.setString(4, jTextField5.getText());
                        prepStatement.setString(5, jTextField6.getText());
                        prepStatement.setInt(6, Integer.parseInt(jTextField1.getText()));
                        
                        int result = prepStatement.executeUpdate();
                       
                            if (result > 0) 
                            {
                                javax.swing.JLabel label = new javax.swing.JLabel("Cutomer SSN " + jTextField1.getText() + " updated successfully.");
                                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                                JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                                getNewData();
                            } 
                            else 
                            {
                                // Error 1
                                JOptionPane.showMessageDialog(null, "Can't update SSN");
                            }
                        prepStatement.close();
                    } 
                    else 
                    {
                        javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                        label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                        JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                    }

                } 
                else 
                {
                    //Error 2
                    JOptionPane.showMessageDialog(null, "Error 2" );
                }
            } 
            catch (SQLException e) 
            {
                JOptionPane.showMessageDialog(null, "Error updating Customer." + e.getMessage());
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        // confirmation
        int value = JOptionPane.showConfirmDialog(this, "Do you confirm to delete Customer?");
        if (value == 0) 
        {
                    try {

//                            prepStatement = con.prepareStatement("select * from buys_from2 WHERE cust_ssn = ?");
//                            prepStatement.setInt(1, Integer.parseInt(jTextField1.getText()));
//                            int result = prepStatement.executeUpdate();
//                        
//                            if(result>0)
//                            {
//                                prepStatement = con.prepareStatement("DELETE buys_from2 WHERE cust_ssn = ?");
//                                prepStatement.setInt(1, Integer.parseInt(jTextField1.getText()));
//                                result = prepStatement.executeUpdate();
//                                
//                            }
//                            else
//                            {
//                                JOptionPane.showMessageDialog(null, "No reference to stores found. Deleting customer...");
//                            }
                            
                            //old lab way
                            prepStatement = con.prepareStatement("DELETE customers WHERE ssn = ?");
                            prepStatement.setInt(1, Integer.parseInt(jTextField1.getText()));
                            int result = prepStatement.executeUpdate();
                        
                            //new lab way
                            //String prepSQL = "DELETE customers WHERE ssn = " + jTextField1.getText();
                            //int result = dbCon.executePrepared(prepSQL);
                            if (result > 0) 
                            {
                                javax.swing.JLabel label = new javax.swing.JLabel("Customer with SSN " + jTextField1.getText().trim() + " deleted successfully.");
                                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                                JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                                getNewData();
                            }
                         } 
                            catch (SQLException e) 
                            {
                                JOptionPane.showMessageDialog(null, "Error deleting customer.");
                            }
            }   
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    boolean isValidData() {

        clearErrorLabels();
        boolean result = true;
        if (jTextField1.getText().trim().isEmpty() || !isInteger(jTextField1.getText())||(jTextField1.getText().trim().length() == 10)) {
            if (jTextField1.getText().trim().isEmpty()) {
                jLabel9.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(jTextField1.getText())) {
                jLabel9.setText("Invalid. Must be integer.");
            } else if ((jTextField1.getText().trim().length() == 10)){
            jLabel9.setText("Invalid. Must be 9 values.");
            }

            jLabel9.setVisible(true);
            result = false;
        }

        if (jTextField2.getText().trim().isEmpty() ) {
            if (jTextField2.getText().trim().isEmpty()) {
                jLabel10.setText("Invalid. Cannot be empty.");
            } 

            jLabel10.setVisible(true);
            result = false;
        }
        
        if (jTextField3.getText().trim().isEmpty() ) {
            if (jTextField3.getText().trim().isEmpty()) {
                jLabel11.setText("Invalid. Cannot be empty.");
            } 

            jLabel11.setVisible(true);
            result = false;
        }
        
        if (jTextField4.getText().trim().isEmpty() || (jTextField4.getText().trim().length() == 14)) {
            if (jTextField4.getText().trim().isEmpty()) {
                jLabel12.setText("Invalid. Cannot be empty.");
            } else if (jTextField4.getText().trim().length() == 14) {
                jLabel12.setText("Invalid. Must be 13 chars.");
            }
            jLabel12.setVisible(true);
            result = false;
        }

        if (jTextField5.getText().trim().isEmpty() ) {
            if (jTextField5.getText().trim().isEmpty()) {
                jLabel13.setText("Invalid. Cannot be empty.");
            } 

            jLabel13.setVisible(true);
            result = false;
        }
        
        if (jTextField6.getText().trim().isEmpty() ) {
            if (jTextField6.getText().trim().isEmpty()) {
                jLabel14.setText("Invalid. Cannot be empty.");
            } 

            jLabel14.setVisible(true);
            result = false;
        }

        return result;
    }
    
    void clearErrorLabels() {
        
        jLabel9.setText("");
        jLabel9.setVisible(false);
        jLabel10.setText("");
        jLabel10.setVisible(false);
        jLabel11.setText("");
        jLabel11.setVisible(false);
        jLabel12.setText("");
        jLabel12.setVisible(false);
        jLabel13.setText("");
        jLabel13.setVisible(false);
        jLabel14.setText("");
        jLabel14.setVisible(false);

    }
    
    
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDeleteCustomers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
